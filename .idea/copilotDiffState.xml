<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/common/helper/ApexChartHelper.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/common/helper/ApexChartHelper.php" />
              <option name="originalContent" value="&lt;?php&#10;&#10;namespace common\helper;&#10;&#10;use onmotion\apexcharts\ApexchartsWidget;&#10;use Yii;&#10;&#10;class ApexChartHelper&#10;{&#10;    public static function getTypeLine(): string&#10;    {&#10;        return 'line';&#10;    }&#10;&#10;    public static function getTypeRadar(): string&#10;    {&#10;        return 'radar';&#10;    }&#10;&#10;    /**&#10;     * Generates a line chart for profile scores.&#10;     *&#10;     * @param array $categories&#10;     * @param array $series&#10;     * @param string $title&#10;     * @return string&#10;     */&#10;    public static function renderParticipantScoreChart&#10;    (&#10;        array  $categories,&#10;        array  $series,&#10;        string $title = 'Participant'&#10;    ): string&#10;    {&#10;        return ApexchartsWidget::widget([&#10;            'type' =&gt; 'line', // default area&#10;            'height' =&gt; '400', // default 350&#10;            'width' =&gt; '100%', // default 100%&#10;            'chartOptions' =&gt; [&#10;                'chart' =&gt; [&#10;                    'dropShadow' =&gt; [&#10;                        'enabled' =&gt; true,&#10;                        'color' =&gt; '#000',&#10;                        'top' =&gt; 18,&#10;                        'left' =&gt; 7,&#10;                        'blur' =&gt; 10,&#10;                        'opacity' =&gt; 0.2&#10;                    ],&#10;                    'toolbar' =&gt; [&#10;                        'show' =&gt; true,&#10;                        'autoSelected' =&gt; 'zoom'&#10;                    ],&#10;                ],&#10;                'dataLabels' =&gt; [&#10;                    'enabled' =&gt; true,&#10;                ],&#10;                'stroke' =&gt; [&#10;                    'curve' =&gt; 'smooth'&#10;                ],&#10;                'title' =&gt; [&#10;                    'text' =&gt; Yii::t('app', $title),&#10;                    'align' =&gt; 'left'&#10;                ],&#10;                'grid' =&gt; [&#10;                    'borderColor' =&gt; '#e7e7e7',&#10;                    'row' =&gt; [&#10;                        'colors' =&gt; ['#f3f3f3', 'transparent'],&#10;                        'opacity' =&gt; 0.5&#10;                    ]&#10;                ],&#10;                'markers' =&gt; [&#10;                    'size' =&gt; '1'&#10;                ],&#10;                'xaxis' =&gt; [&#10;                    'title' =&gt; [&#10;                        'text' =&gt; Yii::t('app', 'Subject')&#10;                    ],&#10;                    'labels' =&gt; [&#10;                        'rotate' =&gt; -45,&#10;                        'rotateAlways' =&gt; true,&#10;                    ],&#10;                    'categories' =&gt; array_values($categories),&#10;                ],&#10;                'yaxis' =&gt; [&#10;                    'title' =&gt; [&#10;                        'text' =&gt; Yii::t('app', 'Score')&#10;                    ],&#10;                    'min' =&gt; 0,&#10;                ],&#10;                'legend' =&gt; [&#10;                    'position' =&gt; 'top',&#10;                    'verticalAlign' =&gt; 'bottom',&#10;                    'horizontalAlign' =&gt; 'right',&#10;                    'floating' =&gt; true,&#10;                    'offsetY' =&gt; -25,&#10;                    'offsetX' =&gt; -5,&#10;                ],&#10;            ],&#10;            'series' =&gt; array_values($series),&#10;        ]);&#10;    }&#10;&#10;    /**&#10;     * Generates a radar chart for profile evaluation vs average.&#10;     *&#10;     * @param array $categories&#10;     * @param array $series&#10;     * @param string $title&#10;     * @return string&#10;     */&#10;    public static function renderRadarChart&#10;    (&#10;        array  $categories,&#10;        array  $series,&#10;        string $title = 'Participant Evaluation vs Average'&#10;    ): string&#10;    {&#10;        return ApexchartsWidget::widget([&#10;            'type' =&gt; 'radar', // Set the chart type to 'radar'&#10;            'height' =&gt; '400', // Set the height of the chart&#10;            'width' =&gt; '100%', // Set the width of the chart&#10;            'chartOptions' =&gt; [&#10;                'chart' =&gt; [&#10;                    'toolbar' =&gt; [&#10;                        'show' =&gt; true,&#10;                        'autoSelected' =&gt; 'zoom'&#10;                    ],&#10;                ],&#10;                'xaxis' =&gt; [&#10;                    'categories' =&gt; $categories, // Set categories for the radar chart (subjects)&#10;                ],&#10;                'stroke' =&gt; [&#10;                    'show' =&gt; true,&#10;                    'width' =&gt; 2,&#10;                ],&#10;                'fill' =&gt; [&#10;                    'opacity' =&gt; 0.1, // Set the opacity of the filled area&#10;                ],&#10;                'markers' =&gt; [&#10;                    'size' =&gt; 4, // Set marker size for points&#10;                ],&#10;                'legend' =&gt; [&#10;                    'position' =&gt; 'top',&#10;                    'horizontalAlign' =&gt; 'center',&#10;                ],&#10;                'title' =&gt; [&#10;                    'text' =&gt; \Yii::t('app', $title),&#10;                    'align' =&gt; 'center',&#10;                ],&#10;            ],&#10;            'series' =&gt; $series, // Pass the series data&#10;        ]);&#10;    }&#10;&#10;    /**&#10;     * Generates a pie chart.&#10;     *&#10;     * @param array $labels&#10;     * @param array $series&#10;     * @param string $title&#10;     * @return string&#10;     */&#10;    public static function renderPieChart(&#10;        array $labels,&#10;        array $series,&#10;        string $title = 'Pie Chart'&#10;    ): string&#10;    {&#10;        return ApexchartsWidget::widget([&#10;            'type' =&gt; 'pie',&#10;            'height' =&gt; '350',&#10;            'width' =&gt; '100%',&#10;            'chartOptions' =&gt; [&#10;                'chart' =&gt; [&#10;                    'toolbar' =&gt; [&#10;                        'show' =&gt; true,&#10;                    ],&#10;                ],&#10;                'labels' =&gt; $labels,&#10;                'title' =&gt; [&#10;                    'text' =&gt; \Yii::t('app', $title),&#10;                    'align' =&gt; 'center',&#10;                ],&#10;                'legend' =&gt; [&#10;                    'position' =&gt; 'bottom',&#10;                    'horizontalAlign' =&gt; 'center',&#10;                ],&#10;            ],&#10;            'series' =&gt; $series,&#10;        ]);&#10;    }&#10;}" />
              <option name="updatedContent" value="&lt;?php&#10;&#10;namespace common\helper;&#10;&#10;use onmotion\apexcharts\ApexchartsWidget;&#10;use Yii;&#10;&#10;class ApexChartHelper&#10;{&#10;    public static function getTypeLine(): string&#10;    {&#10;        return 'line';&#10;    }&#10;&#10;    public static function getTypeRadar(): string&#10;    {&#10;        return 'radar';&#10;    }&#10;&#10;    /**&#10;     * Generates a line chart for profile scores.&#10;     *&#10;     * @param array $categories&#10;     * @param array $series&#10;     * @param string $title&#10;     * @return string&#10;     */&#10;    public static function renderParticipantScoreChart&#10;    (&#10;        array  $categories,&#10;        array  $series,&#10;        string $title = 'Participant'&#10;    ): string&#10;    {&#10;        return ApexchartsWidget::widget([&#10;            'type' =&gt; 'line', // default area&#10;            'height' =&gt; '400', // default 350&#10;            'width' =&gt; '100%', // default 100%&#10;            'chartOptions' =&gt; [&#10;                'chart' =&gt; [&#10;                    'dropShadow' =&gt; [&#10;                        'enabled' =&gt; true,&#10;                        'color' =&gt; '#000',&#10;                        'top' =&gt; 18,&#10;                        'left' =&gt; 7,&#10;                        'blur' =&gt; 10,&#10;                        'opacity' =&gt; 0.2&#10;                    ],&#10;                    'toolbar' =&gt; [&#10;                        'show' =&gt; true,&#10;                        'autoSelected' =&gt; 'zoom'&#10;                    ],&#10;                ],&#10;                'dataLabels' =&gt; [&#10;                    'enabled' =&gt; true,&#10;                ],&#10;                'stroke' =&gt; [&#10;                    'curve' =&gt; 'smooth'&#10;                ],&#10;                'title' =&gt; [&#10;                    'text' =&gt; Yii::t('app', $title),&#10;                    'align' =&gt; 'left'&#10;                ],&#10;                'grid' =&gt; [&#10;                    'borderColor' =&gt; '#e7e7e7',&#10;                    'row' =&gt; [&#10;                        'colors' =&gt; ['#f3f3f3', 'transparent'],&#10;                        'opacity' =&gt; 0.5&#10;                    ]&#10;                ],&#10;                'markers' =&gt; [&#10;                    'size' =&gt; '1'&#10;                ],&#10;                'xaxis' =&gt; [&#10;                    'title' =&gt; [&#10;                        'text' =&gt; Yii::t('app', 'Subject')&#10;                    ],&#10;                    'labels' =&gt; [&#10;                        'rotate' =&gt; -45,&#10;                        'rotateAlways' =&gt; true,&#10;                    ],&#10;                    'categories' =&gt; array_values($categories),&#10;                ],&#10;                'yaxis' =&gt; [&#10;                    'title' =&gt; [&#10;                        'text' =&gt; Yii::t('app', 'Score')&#10;                    ],&#10;                    'min' =&gt; 0,&#10;                ],&#10;                'legend' =&gt; [&#10;                    'position' =&gt; 'top',&#10;                    'verticalAlign' =&gt; 'bottom',&#10;                    'horizontalAlign' =&gt; 'right',&#10;                    'floating' =&gt; true,&#10;                    'offsetY' =&gt; -25,&#10;                    'offsetX' =&gt; -5,&#10;                ],&#10;            ],&#10;            'series' =&gt; array_values($series),&#10;        ]);&#10;    }&#10;&#10;    /**&#10;     * Generates a radar chart for profile evaluation vs average.&#10;     *&#10;     * @param array $categories&#10;     * @param array $series&#10;     * @param string $title&#10;     * @return string&#10;     */&#10;    public static function renderRadarChart&#10;    (&#10;        array  $categories,&#10;        array  $series,&#10;        string $title = 'Participant Evaluation vs Average'&#10;    ): string&#10;    {&#10;        return ApexchartsWidget::widget([&#10;            'type' =&gt; 'radar', // Set the chart type to 'radar'&#10;            'height' =&gt; '400', // Set the height of the chart&#10;            'width' =&gt; '100%', // Set the width of the chart&#10;            'chartOptions' =&gt; [&#10;                'chart' =&gt; [&#10;                    'toolbar' =&gt; [&#10;                        'show' =&gt; true,&#10;                        'autoSelected' =&gt; 'zoom'&#10;                    ],&#10;                ],&#10;                'xaxis' =&gt; [&#10;                    'categories' =&gt; $categories, // Set categories for the radar chart (subjects)&#10;                ],&#10;                'stroke' =&gt; [&#10;                    'show' =&gt; true,&#10;                    'width' =&gt; 2,&#10;                ],&#10;                'fill' =&gt; [&#10;                    'opacity' =&gt; 0.1, // Set the opacity of the filled area&#10;                ],&#10;                'markers' =&gt; [&#10;                    'size' =&gt; 4, // Set marker size for points&#10;                ],&#10;                'legend' =&gt; [&#10;                    'position' =&gt; 'top',&#10;                    'horizontalAlign' =&gt; 'center',&#10;                ],&#10;                'title' =&gt; [&#10;                    'text' =&gt; \Yii::t('app', $title),&#10;                    'align' =&gt; 'center',&#10;                ],&#10;            ],&#10;            'series' =&gt; $series, // Pass the series data&#10;        ]);&#10;    }&#10;&#10;    /**&#10;     * Generates a pie chart.&#10;     *&#10;     * @param array $labels&#10;     * @param array $series&#10;     * @param string $title&#10;     * @return string&#10;     */&#10;    public static function renderPieChart(&#10;        array $labels,&#10;        array $series,&#10;        string $title = 'Pie Chart'&#10;    ): string&#10;    {&#10;        return ApexchartsWidget::widget([&#10;            'type' =&gt; 'pie',&#10;            'height' =&gt; '350',&#10;            'width' =&gt; '100%',&#10;            'chartOptions' =&gt; [&#10;                'chart' =&gt; [&#10;                    'toolbar' =&gt; [&#10;                        'show' =&gt; true,&#10;                    ],&#10;                ],&#10;                'labels' =&gt; $labels,&#10;                'title' =&gt; [&#10;                    'text' =&gt; \Yii::t('app', $title),&#10;                    'align' =&gt; 'center',&#10;                ],&#10;                'legend' =&gt; [&#10;                    'position' =&gt; 'bottom',&#10;                    'horizontalAlign' =&gt; 'center',&#10;                ],&#10;            ],&#10;            'series' =&gt; $series,&#10;        ]);&#10;    }&#10;&#10;    /**&#10;     * Generates a bar chart.&#10;     *&#10;     * @param array $categories&#10;     * @param array $series&#10;     * @param string $title&#10;     * @return string&#10;     */&#10;    public static function renderBarChart(&#10;        array $categories,&#10;        array $series,&#10;        string $title = 'Bar Chart'&#10;    ): string&#10;    {&#10;        return ApexchartsWidget::widget([&#10;            'type' =&gt; 'bar',&#10;            'height' =&gt; '350',&#10;            'width' =&gt; '100%',&#10;            'chartOptions' =&gt; [&#10;                'chart' =&gt; [&#10;                    'toolbar' =&gt; [&#10;                        'show' =&gt; true,&#10;                    ],&#10;                ],&#10;                'xaxis' =&gt; [&#10;                    'categories' =&gt; $categories,&#10;                ],&#10;                'title' =&gt; [&#10;                    'text' =&gt; \Yii::t('app', $title),&#10;                    'align' =&gt; 'center',&#10;                ],&#10;                'legend' =&gt; [&#10;                    'position' =&gt; 'bottom',&#10;                    'horizontalAlign' =&gt; 'center',&#10;                ],&#10;            ],&#10;            'series' =&gt; [&#10;                [&#10;                    'name' =&gt; \Yii::t('app', 'Exam Type'),&#10;                    'data' =&gt; $series,&#10;                ]&#10;            ],&#10;        ]);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>